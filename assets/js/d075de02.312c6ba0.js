"use strict";(self.webpackChunktutorial_site=self.webpackChunktutorial_site||[]).push([[937],{3905:function(e,t,n){n.d(t,{Zo:function(){return u},kt:function(){return k}});var a=n(7294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function l(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?l(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):l(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function o(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},l=Object.keys(e);for(a=0;a<l.length;a++)n=l[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(a=0;a<l.length;a++)n=l[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var s=a.createContext({}),p=function(e){var t=a.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},u=function(e){var t=p(e.components);return a.createElement(s.Provider,{value:t},e.children)},c={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},m=a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,l=e.originalType,s=e.parentName,u=o(e,["components","mdxType","originalType","parentName"]),m=p(n),k=r,d=m["".concat(s,".").concat(k)]||m[k]||c[k]||l;return n?a.createElement(d,i(i({ref:t},u),{},{components:n})):a.createElement(d,i({ref:t},u))}));function k(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var l=n.length,i=new Array(l);i[0]=m;var o={};for(var s in t)hasOwnProperty.call(t,s)&&(o[s]=t[s]);o.originalType=e,o.mdxType="string"==typeof e?e:r,i[1]=o;for(var p=2;p<l;p++)i[p]=n[p];return a.createElement.apply(null,i)}return a.createElement.apply(null,n)}m.displayName="MDXCreateElement"},8183:function(e,t,n){n.r(t),n.d(t,{assets:function(){return u},contentTitle:function(){return s},default:function(){return k},frontMatter:function(){return o},metadata:function(){return p},toc:function(){return c}});var a=n(7462),r=n(3366),l=(n(7294),n(3905)),i=["components"],o={sidebar_position:1},s="Introduction",p={unversionedId:"linter/intro",id:"linter/intro",title:"Introduction",description:"Linters are effective tools that help ensure that you're always writing your best code. By performing a static analysis of your codebase, linters provide a systematic way to minimize coding errors, ensure adherence to existing standards, and offer ways to apply a uniform style",source:"@site/docs/linter/intro.md",sourceDirName:"linter",slug:"/linter/intro",permalink:"/writing-prompt/docs/linter/intro",editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/linter/intro.md",tags:[],version:"current",sidebarPosition:1,frontMatter:{sidebar_position:1},sidebar:"tutorialSidebar",previous:{title:"Introduction",permalink:"/writing-prompt/docs/intro"},next:{title:"Command line tutorial",permalink:"/writing-prompt/docs/linter/commandLine-tutorial"}},u={},c=[{value:"Prerequisites",id:"prerequisites",level:2},{value:"Step 1: Installing ESLint",id:"step-1-installing-eslint",level:2},{value:"Step 2: Configuring ESLint",id:"step-2-configuring-eslint",level:2},{value:"Prerequisites (configuration)",id:"prerequisites-configuration",level:2},{value:"Creating the configuration file (.eslintrc)",id:"creating-the-configuration-file-eslintrc",level:2},{value:"Getting familiar with the configuration file",id:"getting-familiar-with-the-configuration-file",level:2},{value:"Extends",id:"extends",level:3},{value:"<strong>Rules</strong>",id:"rules",level:4},{value:"ESLint rules",id:"eslint-rules",level:2},{value:"Categories",id:"categories",level:3},{value:"Types",id:"types",level:3},{value:"Customization",id:"customization",level:3},{value:"<strong>Error level</strong>",id:"error-level",level:4},{value:"<strong>Exit codes</strong>",id:"exit-codes",level:4},{value:"<strong>Option</strong>",id:"option",level:4},{value:"<strong>Example</strong>",id:"example",level:4},{value:"<strong>Reference</strong>",id:"reference",level:4}],m={toc:c};function k(e){var t=e.components,n=(0,r.Z)(e,i);return(0,l.kt)("wrapper",(0,a.Z)({},m,n,{components:t,mdxType:"MDXLayout"}),(0,l.kt)("h1",{id:"introduction"},"Introduction"),(0,l.kt)("p",null,"Linters are effective tools that help ensure that you're always writing your best code. By performing a static analysis of your codebase, linters provide a systematic way to minimize coding errors, ensure adherence to existing standards, and offer ways to apply a uniform style\nacross a project."),(0,l.kt)("p",null,"Since JavaScript is fundamental to building applications on Stacks, you'll be introduced to a JavaScript linter in these tutorials. While there are many effective and well-known open-source linters currently available ( ",(0,l.kt)("a",{parentName:"p",href:"https://eslint.org/"},"ESLint"),", ",(0,l.kt)("a",{parentName:"p",href:"https://www.jslint.com/"},"JSLint"),",\n",(0,l.kt)("a",{parentName:"p",href:"https://jshint.com/"},"JSHint"),", and the ",(0,l.kt)("a",{parentName:"p",href:"https://jscs-dev.github.io/"},"JSCS JavaScript Linter")," ), this tutorial will focus on getting you up and running with ",(0,l.kt)("strong",{parentName:"p"},"ESLint"),". ESLint is a flexible and feature-rich linter with the ability to directly integrate with your development workflow while also providing a robust, command-line functionality."),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"NOTE:")),(0,l.kt)("blockquote",null,(0,l.kt)("p",{parentName:"blockquote"},"This tutorial is NodeJS- and ESLint-specific."),(0,l.kt)("p",{parentName:"blockquote"},"This tutorial will walk you through the following steps:"),(0,l.kt)("ul",{parentName:"blockquote"},(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},"Installing ESLint")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},"Configuring ESLint")))),(0,l.kt)("h2",{id:"prerequisites"},"Prerequisites"),(0,l.kt)("p",null,(0,l.kt)("a",{parentName:"p",href:"https://nodejs.org/en/"},"Node.js")," (version ",(0,l.kt)("strong",{parentName:"p"},"16.0.0")," or\nlater)."),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"NOTE:")),(0,l.kt)("blockquote",null,(0,l.kt)("p",{parentName:"blockquote"},"You can verify your installation by opening up Terminal (MacOs) or a command prompt/PowerShell window (Windows) and running the following command:"),(0,l.kt)("pre",{parentName:"blockquote"},(0,l.kt)("code",{parentName:"pre",className:"language-sh"},"node --version\n")),(0,l.kt)("p",{parentName:"blockquote"},(0,l.kt)("em",{parentName:"p"},"or"),","),(0,l.kt)("pre",{parentName:"blockquote"},(0,l.kt)("code",{parentName:"pre",className:"language-sh"},"node -v\n"))),(0,l.kt)("h2",{id:"step-1-installing-eslint"},"Step 1: Installing ESLint"),(0,l.kt)("p",null,"To install ESLint, run one of the following commands in a terminal window."),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},"For a local install, navigate to the workspace folder and then run:"),(0,l.kt)("pre",{parentName:"li"},(0,l.kt)("code",{parentName:"pre",className:"language-sh"},"npm install eslint\n")),(0,l.kt)("p",{parentName:"li"},(0,l.kt)("em",{parentName:"p"},"or"),",")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},"For a global install, run:"),(0,l.kt)("pre",{parentName:"li"},(0,l.kt)("code",{parentName:"pre",className:"language-sh"},"npm install -g eslint\n")))),(0,l.kt)("h2",{id:"step-2-configuring-eslint"},"Step 2: Configuring ESLint"),(0,l.kt)("p",null,"One of the ways that ESLint distinguishes itself is through its use of configuration files. If your project requires it, the standard JavaScript rule set can be extended with the use of custom, modular configuration files applied to specific parts of your file hierarchy."),(0,l.kt)("p",null,"However, ESLint is fully functional right out of the box with the standard .eslintrc configuration file placed in your project's root directory."),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"NOTE:"),"  "),(0,l.kt)("blockquote",null,(0,l.kt)("p",{parentName:"blockquote"},"If you would like additional information about advanced operations in ESLint, please refer to the ",(0,l.kt)("a",{parentName:"p",href:"/writing-prompt/docs/linter/learnMore"},(0,l.kt)("strong",{parentName:"a"},"Learning More"))," section of this tutorial.")),(0,l.kt)("h2",{id:"prerequisites-configuration"},"Prerequisites (configuration)"),(0,l.kt)("p",null,"The ESLint configuration file set-up process assumes you already have a package.json file. If you don't, please follow the procedures below."),(0,l.kt)("ol",null,(0,l.kt)("li",{parentName:"ol"},(0,l.kt)("p",{parentName:"li"},"In a terminal window, run:"),(0,l.kt)("pre",{parentName:"li"},(0,l.kt)("code",{parentName:"pre",className:"language-sh"},"npm init\n")),(0,l.kt)("p",{parentName:"li"},"npm will echo with:"),(0,l.kt)("blockquote",{parentName:"li"},(0,l.kt)("p",{parentName:"blockquote"},"This utility will walk you through creating a package.json file."),(0,l.kt)("p",{parentName:"blockquote"},"It only covers the most common items, and tries to guess sensible\ndefaults."),(0,l.kt)("p",{parentName:"blockquote"},"See ","`","npm help init","`"," for definitive documentation on these fields"),(0,l.kt)("p",{parentName:"blockquote"},"and exactly what they do."),(0,l.kt)("p",{parentName:"blockquote"},"Use ","`","npm install \\<pkg",">","`"," afterwards to install a package and"),(0,l.kt)("p",{parentName:"blockquote"},"save it as a dependency in the package.json file."),(0,l.kt)("p",{parentName:"blockquote"},"Press \\^C at any time to quit."),(0,l.kt)("p",{parentName:"blockquote"},"Follow the prompts to continue setting up the package.json file."))),(0,l.kt)("li",{parentName:"ol"},(0,l.kt)("p",{parentName:"li"},"After the package.json file has be created, run the following in a terminal window to install the package you have just created:"),(0,l.kt)("pre",{parentName:"li"},(0,l.kt)("code",{parentName:"pre",className:"language-sh"},"npm install config\n")),(0,l.kt)("p",{parentName:"li"},"If the installation was successful, npm will echo with:"),(0,l.kt)("blockquote",{parentName:"li"},(0,l.kt)("p",{parentName:"blockquote"},"added ",(0,l.kt)("em",{parentName:"p"},"n")," packages, and audited ",(0,l.kt)("em",{parentName:"p"},"m")," packages in 1s"),(0,l.kt)("p",{parentName:"blockquote"},"found 0 vulnerabilities")))),(0,l.kt)("h2",{id:"creating-the-configuration-file-eslintrc"},"Creating the configuration file (.eslintrc)"),(0,l.kt)("p",null,"In a terminal window, run:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-sh"},"npm init @eslint/config\n")),(0,l.kt)("p",null,"npm will echo with a series of configuration questions. Choose the responses that best apply to your development workflow."),(0,l.kt)("blockquote",null,(0,l.kt)("p",{parentName:"blockquote"},"\u2713"," How would you like to use ESLint?"),(0,l.kt)("p",{parentName:"blockquote"},"\u2713"," What type of modules does your project use?"),(0,l.kt)("p",{parentName:"blockquote"},"\u2713"," Which framework does your project use?"),(0,l.kt)("p",{parentName:"blockquote"},"\u2713"," Does your project use TypeScript?"),(0,l.kt)("p",{parentName:"blockquote"},"\u2713"," Where does your code run?"),(0,l.kt)("p",{parentName:"blockquote"},"\u2713"," What format do you want your config file to be in?")),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"NOTE:")),(0,l.kt)("p",null,"If you had previously chosen a global installation of ESLint, the installer will notify you of the following:"),(0,l.kt)("blockquote",null,(0,l.kt)("p",{parentName:"blockquote"},"Local ESLint installation not found."),(0,l.kt)("p",{parentName:"blockquote"},"The config that you\\'ve selected requires the following dependencies:"),(0,l.kt)("blockquote",{parentName:"blockquote"},(0,l.kt)("p",{parentName:"blockquote"},"eslint@latest"),(0,l.kt)("p",{parentName:"blockquote"},"\u2713"," Would you like to install them now with npm? No / Yes"))),(0,l.kt)("p",null,"Select ",(0,l.kt)("strong",{parentName:"p"},(0,l.kt)("em",{parentName:"strong"},"Yes"))," to install the required dependencies."),(0,l.kt)("p",null,"If successful, npm will echo with:"),(0,l.kt)("blockquote",null,(0,l.kt)("p",{parentName:"blockquote"},"Installing eslint@latest"),(0,l.kt)("p",{parentName:"blockquote"},"added ",(0,l.kt)("em",{parentName:"p"},"n")," packages, and audited ",(0,l.kt)("em",{parentName:"p"},"m")," packages in 6s"),(0,l.kt)("p",{parentName:"blockquote"},(0,l.kt)("em",{parentName:"p"},"x")," packages are looking for funding"),(0,l.kt)("p",{parentName:"blockquote"},"run ","`","npm fund","`"," for details"),(0,l.kt)("p",{parentName:"blockquote"},"found 0 vulnerabilities"),(0,l.kt)("p",{parentName:"blockquote"},"A config file was generated, but the config file itself may not follow your linting rules."),(0,l.kt)("p",{parentName:"blockquote"},"Successfully created .eslintrc.{ js ","|"," json\\ | yml } file in \\<",(0,l.kt)("em",{parentName:"p"},"file path"),">")),(0,l.kt)("h2",{id:"getting-familiar-with-the-configuration-file"},"Getting familiar with the configuration file"),(0,l.kt)("p",null,"At this point, you should have a .eslintrc.{ js ","|"," json ","|"," yml } file in your directory."),(0,l.kt)("p",null,"In it, you'll find several landmarks relating to ESLint rule sets that you should become familiar with."),(0,l.kt)("h3",{id:"extends"},"Extends"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-json"},'{\n   "extends": "eslint:recommended"\n}\n')),(0,l.kt)("p",null,"With this line in place, all of the rules marked with a ","\u2713"," on the ",(0,l.kt)("a",{parentName:"p",href:"https://eslint.org/docs/rules"},"rules page")," will be active (please see the ",(0,l.kt)("a",{parentName:"p",href:"#eslint-rules"},"ESLint rules")," section below). For more information about extending rule sets, please see the ",(0,l.kt)("a",{parentName:"p",href:"/writing-prompt/docs/linter/learnMore"},(0,l.kt)("strong",{parentName:"a"},"Learning More"))," section of the tutorial."),(0,l.kt)("h4",{id:"rules"},(0,l.kt)("strong",{parentName:"h4"},"Rules")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-json"},'{\n   "rules": {\n   // your rules go here\n   }\n}\n')),(0,l.kt)("p",null,"This section of the configuration file is reserved for customization of the existing ESLint rules."),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"NOTE:")),(0,l.kt)("blockquote",null,(0,l.kt)("p",{parentName:"blockquote"},"For a discussion about the ESLint rules, please see the ",(0,l.kt)("a",{parentName:"p",href:"#eslint-rules"},"ESLint rule")," section below.")),(0,l.kt)("h2",{id:"eslint-rules"},"ESLint rules"),(0,l.kt)("p",null,"A full listing of ESLint rules and their respective definitions can be found on the ",(0,l.kt)("a",{parentName:"p",href:"https://eslint.org/docs/rules/"},"ESLint project site"),"."),(0,l.kt)("h3",{id:"categories"},"Categories"),(0,l.kt)("p",null,"ESLint recognizes 3 categories of rules:"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},(0,l.kt)("strong",{parentName:"p"},"Possible problems")," - rules that relate to possible logic errors in code")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},(0,l.kt)("strong",{parentName:"p"},"Suggestions")," - rules that suggest alternate ways of doing things")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},(0,l.kt)("strong",{parentName:"p"},"Layout & Formatting")," - rules concerned with how the code looks rather than how it executes"))),(0,l.kt)("h3",{id:"types"},"Types"),(0,l.kt)("p",null,"In addition, these categories are further distinguished with 3 different types, each denoted with a different icon on the rule page:"),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Icon"),(0,l.kt)("th",{parentName:"tr",align:null},"How the rule is handled by ESLint"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"\u2713"),(0,l.kt)("td",{parentName:"tr",align:null},"Indicates that a rule is enabled if the ",(0,l.kt)("strong",{parentName:"td"},'\\"extends\\":\\"eslint:recommended\\"')," property is present in a configuration file.")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"\ud83d\udd27"),(0,l.kt)("td",{parentName:"tr",align:null},"Indicates that problems reported by the rule are automatically correctable by the ",(0,l.kt)("inlineCode",{parentName:"td"},"--fix")," command-line option.")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"\ud83d\udca1"),(0,l.kt)("td",{parentName:"tr",align:null},"Indicates that problems reported by the rule can be corrected manually. Suggestions are provide either through the editor (if the ESLint extension is present) or through command-line application of the eslint command.")))),(0,l.kt)("h3",{id:"customization"},"Customization"),(0,l.kt)("p",null,"As noted ",(0,l.kt)("a",{parentName:"p",href:"#rules"},"above"),", ESLint allows you to tailor the behavior of rules by editing the ",(0,l.kt)("em",{parentName:"p"},"rules")," property of the configuration file."),(0,l.kt)("p",null,"In general, adjustments are made by adding a comma-separated list of <",(0,l.kt)("em",{parentName:"p"},"property>-<"),"value*> pairs in the following format:"),(0,l.kt)("blockquote",null,(0,l.kt)("p",{parentName:"blockquote"},'"<',(0,l.kt)("em",{parentName:"p"},"rule"),'>" : [ "<',(0,l.kt)("em",{parentName:"p"},"error level"),'>", <',(0,l.kt)("em",{parentName:"p"},"option"),">","]")),(0,l.kt)("h4",{id:"error-level"},(0,l.kt)("strong",{parentName:"h4"},"Error level")),(0,l.kt)("p",null,"There are 3 possible error levels for ESLint rules:"),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Error Level"),(0,l.kt)("th",{parentName:"tr",align:null},"Alternate Value"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"off"),(0,l.kt)("td",{parentName:"tr",align:null},"0"),(0,l.kt)("td",{parentName:"tr",align:null},"Disables the rule")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"warn"),(0,l.kt)("td",{parentName:"tr",align:null},"1"),(0,l.kt)("td",{parentName:"tr",align:null},"Enables the rule as a warning (no effect on exit code)")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"error"),(0,l.kt)("td",{parentName:"tr",align:null},"2"),(0,l.kt)("td",{parentName:"tr",align:null},"Enables the rule as an error (exit code of ",(0,l.kt)("strong",{parentName:"td"},"1"),")")))),(0,l.kt)("h4",{id:"exit-codes"},(0,l.kt)("strong",{parentName:"h4"},"Exit codes")),(0,l.kt)("p",null,"When linting files, ESLint will exit with one of the following ",(0,l.kt)("a",{parentName:"p",href:"https://eslint.org/docs/user-guide/command-line-interface#exit-codes"},"exit codes"),":"),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Exit code"),(0,l.kt)("th",{parentName:"tr",align:null},"Definition"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"0"),(0,l.kt)("td",{parentName:"tr",align:null},"Linting was successful and there are no linting errors")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"1"),(0,l.kt)("td",{parentName:"tr",align:null},"Linting was successful and there is at least one linting error, or there are more linting warnings than allowed by the ",(0,l.kt)("inlineCode",{parentName:"td"},"--max-warnings")," option")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"2"),(0,l.kt)("td",{parentName:"tr",align:null},"Linting was unsuccessful due to a configuration problem or an internal error")))),(0,l.kt)("h4",{id:"option"},(0,l.kt)("strong",{parentName:"h4"},"Option")),(0,l.kt)("p",null,"This values instructs ESLint on how it should interpret a particular rule when parsing code."),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"NOTE:")),(0,l.kt)("blockquote",null,(0,l.kt)("p",{parentName:"blockquote"},"When an option for a rule is a compound expression (e.g, a \\<",(0,l.kt)("em",{parentName:"p"},"property"),">","-\\<",(0,l.kt)("em",{parentName:"p"},"value"),">"," pair), enclose the ",(0,l.kt)("em",{parentName:"p"},"entire option")," in curly brackets.")),(0,l.kt)("h4",{id:"example"},(0,l.kt)("strong",{parentName:"h4"},"Example")),(0,l.kt)("p",null,"Consider the following ",(0,l.kt)("em",{parentName:"p"},"rules")," property of this .eslintrc configuration:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-json"},'{\n  "rules": {\n    "function-paren-newline": ["error", "multiline"],\n    "keyword-spacing": ["error", { "after": true }],\n    "semi": ["error", "always"]\n  }\n}\n')),(0,l.kt)("p",null,"In the sample ",(0,l.kt)("em",{parentName:"p"},"rules")," property defined above, the second entry specifies how ESLint should parse the rule for ",(0,l.kt)("em",{parentName:"p"},"keyword-spacing"),". In this instance, the rule is configured with the following properties:"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},(0,l.kt)("inlineCode",{parentName:"p"},"<error level> = error"))),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},(0,l.kt)("inlineCode",{parentName:"p"},'<option> = "after": true')))),(0,l.kt)("p",null,"Since the option is a compound expression, curly brackets will need to be used when writing the rules configuration following the format defined above:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-json"},'"<rule>" : [ "<error level>", <option> ]\n')),(0,l.kt)("p",null,"So, in the case for ",(0,l.kt)("em",{parentName:"p"},"keyword-spacing"),", the configuration becomes:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-json"},'"keyword-spacing": ["error", { "after": true } ]\n')),(0,l.kt)("h4",{id:"reference"},(0,l.kt)("strong",{parentName:"h4"},"Reference")),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Rules"),(0,l.kt)("th",{parentName:"tr",align:null},"Options"),(0,l.kt)("th",{parentName:"tr",align:null},"Definition"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("a",{parentName:"td",href:"https://eslint.org/docs/rules/function-paren-newline"},"function-paren-newline")),(0,l.kt)("td",{parentName:"tr",align:null},'"always", "never", "multiline", "multiline-arguments", "consistent", "minItems": value'),(0,l.kt)("td",{parentName:"tr",align:null},"enforces consistent line breaks inside function parentheses")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("a",{parentName:"td",href:"https://eslint.org/docs/rules/keyword-spacing"},"keyword-spacing")),(0,l.kt)("td",{parentName:"tr",align:null},'"before": true, "before": false, "after": true, "after": false, "overrides"'),(0,l.kt)("td",{parentName:"tr",align:null},"enforces consistent spacing before and after keywords")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("a",{parentName:"td",href:"https://eslint.org/docs/rules/semi"},"semi")),(0,l.kt)("td",{parentName:"tr",align:null},'"always", "never"'),(0,l.kt)("td",{parentName:"tr",align:null},"requires or disallows semicolons instead of automatic semicolon insertion (ASI)")))))}k.isMDXComponent=!0}}]);